{"version":3,"sources":["panels/CenterPanel/centerPanel.module.sass","components/UI/ButtonFile/buttonFile.module.sass","components/Glass/glass.module.sass","components/UI/Button/button.module.sass","panels/CenterPanel/CenterPanel.tsx","components/UI/ButtonFile/ButtonFile.tsx","components/Glass/Glass.tsx","components/UI/Input/Input.tsx","components/UI/Button/Button.tsx","components/FormEncrypt/formEncrypt.functions.ts","components/FormEncrypt/FormEncrypt.tsx","components/LoadingPopout/LoadingPopout.tsx","components/ProgressPopout/ProgressPopout.tsx","App.tsx","index.tsx","components/ProgressPopout/progressPopout.module.sass","components/UI/Input/input.module.sass","components/LoadingPopout/loadingPopout.module.sass"],"names":["module","exports","CenterPanel","p","className","classes","centerPanel","children","ButtonFile","onClick","buttonFile","nameFile","onChange","type","name","style","display","Glass","glass","Input","value","input","placeholder","textError","error","Button","disabled","button","encryptFile","file","setShowProgress","setProgress","setTextProgress","setHrefDownload","setFilenameResult","password","decrypt","reader","FileReader","readAsText","readAsDataURL","onprogress","event","progress","total","loaded","toFixed","onerror","console","log","onload","objectCrypt","JSON","parse","result","alert","cipherText","content","AES","toString","CryptoJS","enc","Latin1","info","test","replace","nameFileResult","encrypt","objectResult","algorithm","stringify","FormEncrypt","useState","setPassword","showError","setShowError","onClickCrypt","paddingTop","target","gridGap","gridTemplateColumns","width","LoadingPopout","show","loadingPopout","loader","ProgressPopout","progressPopout","panel","text","progressBar","href","download","filename","setFile","App","showLoading","setShowLoading","showProgress","textProgress","hrefDownload","filenameResult","maxWidth","margin","placeItems","flexDirection","selectedFile","files","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e5fec93.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"centerPanel\":\"centerPanel_centerPanel__lgu3e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonFile\":\"buttonFile_buttonFile__3MjQX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"glass\":\"glass_glass__1HSFg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__3NisR\"};","import React from 'react'\nimport classes from './centerPanel.module.sass'\n\n\ntype TProps = {\n  children: JSX.Element\n}\n\nexport const CenterPanel = (p: TProps) => {\n  return (\n    <div>\n      <div className={classes.centerPanel}>\n        {p.children}\n      </div>\n    </div>\n  )\n}\n","import React, {SyntheticEvent} from 'react'\nimport classes from './buttonFile.module.sass'\n\n\ntype TProps = {\n  onChange: (event: SyntheticEvent) => void,\n  onClick: () => void,\n  nameFile?: string | null\n}\n\nexport const ButtonFile = (p: TProps) => {\n  return (\n    <label onClick={p.onClick}>\n      <div className={classes.buttonFile}>\n        <span>{p.nameFile || 'выберите файл'}</span>\n      </div>\n      <input onChange={p.onChange} type='file' name='file' style={{display: 'none'}}/>\n    </label>\n  )\n}\n","import React, {CSSProperties} from 'react'\nimport classes from './glass.module.sass'\n\n\ntype TProps = {\n  children: JSX.Element | string,\n  style?: CSSProperties\n}\n\nexport const Glass = (p: TProps) => {\n  return (\n    <div className={classes.glass} style={p.style}>\n      {p.children}\n    </div>\n  )\n}\n","import React, {CSSProperties, SyntheticEvent} from 'react'\nimport classes from './input.module.sass'\n\n\ntype TProps = {\n  placeholder?: string,\n  type: string,\n  style?: CSSProperties,\n  textError?: string,\n  value?: string,\n  onChange?: (event: SyntheticEvent) => void\n}\n\nexport const Input = (p: TProps) => {\n  return (\n    <label>\n      <input value={p.value} onChange={p.onChange} style={p.style} className={classes.input} type={p.type} placeholder={p.placeholder}/>\n      {p.textError && (\n        <>\n          <br/>\n          <span className={classes.error}>{p.textError}</span>\n        </>\n      )}\n    </label>\n  )\n}\n","import React, {CSSProperties, SyntheticEvent} from 'react'\nimport classes from './button.module.sass'\n\n\ntype TProps = {\n  children?: string,\n  onClick?: (event?: SyntheticEvent) => void,\n  style?: CSSProperties,\n  disabled?: boolean\n}\n\nexport const Button = (p: TProps) => {\n  return (\n    <button disabled={p.disabled} style={p.style} className={classes.button} onClick={p.onClick}>\n      {p.children}\n    </button>\n  )\n}\n","import React from 'react'\nimport AES from 'crypto-js/aes'\nimport CryptoJS from 'crypto-js'\n\n\ntype TEncryptedFile = {\n  name?: string,\n  algorithm?: string,\n  cipherText: string\n}\n\nexport function encryptFile(\n  file: File,\n  setShowProgress: React.Dispatch<React.SetStateAction<boolean>>,\n  setProgress: React.Dispatch<React.SetStateAction<number>>,\n  setTextProgress: React.Dispatch<React.SetStateAction<string>>,\n  setHrefDownload: React.Dispatch<React.SetStateAction<string>>,\n  setFilenameResult: React.Dispatch<React.SetStateAction<string>>,\n  password: string,\n  decrypt?: boolean\n) {\n  let reader = new FileReader()\n  if (decrypt) reader.readAsText(file)\n  else reader.readAsDataURL(file)\n\n  reader.onprogress = (event) => {\n    setShowProgress(true)\n    setTextProgress('Чтение файла')\n\n    const progress = +(100/(event.total/event.loaded)).toFixed(1)\n    setProgress(progress)\n  }\n  reader.onerror = () => {\n    console.log(reader.error)\n  }\n  reader.onload = () => {\n    setTextProgress(decrypt ? 'Файл расшифрован' : 'Файл зашифрован')\n\n    if (decrypt) {\n      let objectCrypt: TEncryptedFile\n      try {\n        objectCrypt = JSON.parse(reader.result as string)\n      } catch {\n        alert('Неверный формат файла!')\n        setShowProgress(false)\n        return\n      }\n      if (!objectCrypt.cipherText) {\n        alert('Неверный формат файла!')\n        setShowProgress(false)\n        return\n      }\n\n      const crypt = AES.decrypt(objectCrypt.cipherText, password)\n      const content = crypt.toString(CryptoJS.enc.Latin1)\n      console.info('Result decrypt:', content)\n\n      if(!/^data:/.test(content)){\n        alert('Неверный ключ или путь к файлу! Попробуйте еще раз.')\n        setShowProgress(false)\n        return\n      }\n\n      if (objectCrypt.name) objectCrypt.name = objectCrypt.name.replace('/+/', ' ')\n\n      const result = content\n      const nameFileResult = objectCrypt.name || file.name.replace('.crypt', '')\n\n      setFilenameResult(nameFileResult)\n      setHrefDownload(result)\n    } else {\n      const crypt = AES.encrypt(reader.result, password)\n      const cipherText = crypt.toString()\n      console.info('Result encrypt:', cipherText)\n      const nameFile = file.name.replace(/\\.[^/.]+$/, '')\n\n      const objectResult: TEncryptedFile = {\n        name: file.name.replace(/ /g, '/+/'),\n        algorithm: 'AES-256',\n        cipherText,\n      }\n      const safeString = JSON.stringify(objectResult)\n      const result = 'data:application/octet-stream,'+safeString\n      const nameFileResult = nameFile + '.crypt'\n\n      setFilenameResult(nameFileResult)\n      setHrefDownload(result)\n    }\n  }\n}\n","import React, {SyntheticEvent, useState} from 'react'\nimport {Input} from '../UI/Input/Input'\nimport {Button} from '../UI/Button/Button'\nimport {TFile} from '../../types'\nimport {encryptFile} from './formEncrypt.functions'\n\n\nconst textError = 'Введите ключ'\n\ntype TProps = {\n  file: TFile,\n  setShowProgress: React.Dispatch<React.SetStateAction<boolean>>,\n  setProgress: React.Dispatch<React.SetStateAction<number>>,\n  setTextProgress: React.Dispatch<React.SetStateAction<string>>,\n  setHrefDownload: React.Dispatch<React.SetStateAction<string>>,\n  setFilenameResult: React.Dispatch<React.SetStateAction<string>>\n}\n\nexport const FormEncrypt = (p: TProps) => {\n  const [password, setPassword] = useState('')\n  const [showError, setShowError] = useState(false)\n\n  const onClickCrypt = (decrypt = false) => {\n    if (!password) {\n      setShowError(true)\n      return\n    }\n    p.file && encryptFile(p.file, p.setShowProgress, p.setProgress, p.setTextProgress, p.setHrefDownload, p.setFilenameResult, password, decrypt)\n  }\n  const onChangePassword = (event: SyntheticEvent) => {\n    const target = event.target as HTMLInputElement\n    setPassword(target.value)\n    setShowError(!target.value)\n  }\n\n  return (\n    <div style={{paddingTop: '40px'}}>\n      <Input textError={showError ? textError : ''} value={password} onChange={onChangePassword} type='password' placeholder='Ключ шифрования'/>\n      <br/>\n      <br/>\n      <br/>\n      <div style={{display: 'grid', gridGap: '20px', gridTemplateColumns: '50% 50%'}}>\n        <Button disabled={showError} style={{width: '100%'}} onClick={() => onClickCrypt()}>\n          Зашифровать\n        </Button>\n        <Button disabled={showError} style={{width: '100%'}} onClick={() => onClickCrypt(true)}>\n          Расшифровать\n        </Button>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport classes from './loadingPopout.module.sass'\n\n\ntype TProps = {\n  show: boolean\n}\n\nexport const LoadingPopout = (p: TProps) => {\n  return p.show ? (\n    <div className={classes.loadingPopout}>\n      <div className={classes.loader}/>\n    </div>\n  ) : null\n}\n","import React from 'react'\nimport classes from './progressPopout.module.sass'\n\n\ntype TProps = {\n  progress: number,\n  text: string,\n  show: boolean,\n  setShowProgress: React.Dispatch<React.SetStateAction<boolean>>,\n  setFile: React.Dispatch<React.SetStateAction<File | null>>,\n  href: string,\n  filename: string\n}\n\nexport const ProgressPopout = (p: TProps) => {\n  const onClickSave = () => {\n    p.setShowProgress(false)\n    p.setFile(null)\n  }\n\n  return p.show ? (\n    <div className={classes.progressPopout}>\n      <div className={classes.panel}>\n        <div className={classes.text}>{p.text}</div>\n        <div className={classes.progressBar}>\n          <span>{p.progress}%</span>\n          <div style={{width: p.progress + '%'}}/>\n        </div>\n        {p.progress >= 100 && (\n          <div className={classes.button}>\n            <a href={p.href} download={p.filename} onClick={onClickSave}>СОХРАНИТЬ ФАЙЛ</a>\n          </div>\n        )}\n      </div>\n    </div>\n  ) : null\n}\n","import React, {SyntheticEvent, useState} from 'react'\nimport {CenterPanel} from './panels/CenterPanel/CenterPanel'\nimport {ButtonFile} from './components/UI/ButtonFile/ButtonFile'\nimport {Glass} from './components/Glass/Glass'\nimport {FormEncrypt} from './components/FormEncrypt/FormEncrypt'\nimport {TFile} from './types'\nimport {LoadingPopout} from './components/LoadingPopout/LoadingPopout'\nimport {ProgressPopout} from './components/ProgressPopout/ProgressPopout'\n\n\nexport const App = () => {\n  const [file, setFile] = useState(null as TFile)\n  const [showLoading, setShowLoading] = useState(false)\n  const [showProgress, setShowProgress] = useState(false)\n  const [progress, setProgress] = useState(0)\n  const [textProgress, setTextProgress] = useState('')\n  const [hrefDownload, setHrefDownload] = useState('')\n  const [filenameResult, setFilenameResult] = useState('')\n\n  const onSelectFile = (event: SyntheticEvent) => {\n    setShowLoading(false)\n    const target = event.target as HTMLInputElement\n    const selectedFile = target.files![0]\n    setFile(selectedFile)\n  }\n  const onClickFile = () => setShowLoading(false)\n\n  return (\n    <>\n      <CenterPanel>\n        <Glass style={{width: '100%', maxWidth: '500px', margin: '5px'}}>\n          <div style={{display: 'flex', placeItems: 'center', flexDirection: 'column'}}>\n            <ButtonFile onClick={onClickFile} onChange={onSelectFile} nameFile={file ? file.name : null}/>\n            {file && <FormEncrypt setFilenameResult={setFilenameResult} setHrefDownload={setHrefDownload} setProgress={setProgress} setShowProgress={setShowProgress} setTextProgress={setTextProgress} file={file}/>}\n          </div>\n        </Glass>\n      </CenterPanel>\n      <LoadingPopout show={showLoading}/>\n      <ProgressPopout href={hrefDownload} filename={filenameResult} progress={progress} text={textProgress} show={showProgress} setFile={setFile} setShowProgress={setShowProgress}/>\n    </>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport {App} from './App'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"progressPopout\":\"progressPopout_progressPopout__14ABa\",\"panel\":\"progressPopout_panel__2Q3nv\",\"progressBar\":\"progressPopout_progressBar__bFgGq\",\"text\":\"progressPopout_text__3MjOf\",\"button\":\"progressPopout_button__jawYL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"input_input__2rqKD\",\"error\":\"input_error__2swRI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loadingPopout\":\"loadingPopout_loadingPopout__2VhlB\",\"loader\":\"loadingPopout_loader__1Ot7H\"};"],"sourceRoot":""}